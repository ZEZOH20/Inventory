// <auto-generated />
using System;
using Inventory.Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inventory.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    partial class SqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Inventory.Models.GI", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Number"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("EXP")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MFD")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Product_Code")
                        .HasColumnType("int");

                    b.Property<int>("Supplier_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Supply_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarOut_Number")
                        .HasColumnType("int");

                    b.HasKey("Number");

                    b.ToTable("GIs");
                });

            modelBuilder.Entity("Inventory.Models.Product", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Unit_id")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.HasIndex("Unit_id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Inventory.Models.SOP", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Number"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("EXP")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MFD")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Product_Code")
                        .HasColumnType("int");

                    b.Property<int>("Supplier_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Supply_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarIn_Number")
                        .HasColumnType("int");

                    b.HasKey("Number");

                    b.ToTable("SOPs");
                });

            modelBuilder.Entity("Inventory.Models.Stock_Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("EXP")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MFD")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Product_Code")
                        .HasColumnType("int");

                    b.Property<int>("Supplier_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Supply_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("War_Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Product_Code");

                    b.HasIndex("War_Number");

                    b.ToTable("Stock_Products");
                });

            modelBuilder.Entity("Inventory.Models.Transfer", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Number"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("EXP")
                        .HasColumnType("datetime2");

                    b.Property<int>("FromWar_Number")
                        .HasColumnType("int");

                    b.Property<DateTime>("MFD")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Product_Code")
                        .HasColumnType("int");

                    b.Property<int>("Supplier_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Supply_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ToWar_Number")
                        .HasColumnType("int");

                    b.HasKey("Number");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("Inventory.Models.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Inventory.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website_Domain")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Inventory.Models.Warehouse", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Number"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<int>("Manager_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Number");

                    b.HasIndex("ManagerId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("Inventory.Models.Product", b =>
                {
                    b.HasOne("Inventory.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("Unit_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Inventory.Models.Stock_Product", b =>
                {
                    b.HasOne("Inventory.Models.Product", "Product")
                        .WithMany("Stock_Product")
                        .HasForeignKey("Product_Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventory.Models.Warehouse", "Warehouse")
                        .WithMany("Stock_Product")
                        .HasForeignKey("War_Number")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Inventory.Models.Warehouse", b =>
                {
                    b.HasOne("Inventory.Models.User", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Inventory.Models.Product", b =>
                {
                    b.Navigation("Stock_Product");
                });

            modelBuilder.Entity("Inventory.Models.Warehouse", b =>
                {
                    b.Navigation("Stock_Product");
                });
#pragma warning restore 612, 618
        }
    }
}
